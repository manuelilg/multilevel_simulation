<launch>
  <env name="GAZEBO_MODEL_PATH" value="/opt/ros/kinetic/share"/>

  <include file="$(find multilevel_building)/launch/multilevel_building_world.launch" />

  <arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find turtlebot_description)/robots/kobuki_hexagons_kinect_velodyne.urdf.xacro'"/>
  <param name="robot_description" command="$(arg urdf_file)"/>
  <arg name="sdf_file" default="$(find kobuki_description)/urdf/kobuki_kinect_velodyne.sdf"/>

<!--  <include file="$(find turtlebot_gazebo)/launch/includes/kobuki.launch.xml">
    <arg name="base" value="kobuki"/>
    <arg name="stacks" value="hexagons"/>
    <arg name="3d_sensor" value="kinect"/>
    <arg name="appendix" value=""/>
  </include>-->

  <!-- Gazebo model spawner -->
  <node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model"
        args="-x 3 -y 0 -z 0.3 -Y 1.570796 -unpause -sdf -file $(arg sdf_file) robot_description_gazebo -model mobile_base"/>

  <!-- Velocity muxer -->
  <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
        args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml"/>
    <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
  </node>

  <!-- Bumper/cliff to pointcloud (not working, as it needs sensors/core messages) -->
  <include file="$(find turtlebot_bringup)/launch/includes/kobuki/bumper2pc.launch.xml"/>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>

</launch>
